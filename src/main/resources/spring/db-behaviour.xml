<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"

>
    <!--support any action (CRUD etc.) in transaction-->
    <tx:annotation-driven/>

    <!--auto scan selected package-->
    <context:annotation-config/>

    <!--add all beans from selected package to ctx from "repository (dao)" layer-->
    <beans profile="JPA">
        <context:component-scan base-package="ua.teachme.**.repository.jpa"/>
    </beans>

    <!--add all beans from selected package to ctx from "repository (dao)" layer-->
    <beans profile="DATAJPA">
        <context:component-scan base-package="ua.teachme.**.repository.datajpa"/>
        <jpa:repositories base-package="ua.teachme.**.repository.datajpa"/>
    </beans>

    <beans profile="JPA, DATAJPA">

        <!--create EntityManager - main class to work with db by JPQL-->
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="jdbcDataSource"
              p:packagesToScan="ua.teachme.**.model">

            <!--property map configuration-->
            <property name="jpaPropertyMap">
                <map>

                    <!--console info-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>

                    <!--hibernate cache properties-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}" value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>

                    <!--1-st level cache active forever it's constant, 2-nd and 3-rd allow changes-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="true"/><!--default - false-->
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}" value="false"/> <!--default - false-->

                    <!--config file location-->
                    <entry key="#{T(org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory).NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME}" value="cache/ehcache.xml"/>

                    <!--JPA auto generate db scripts (NOT db schema) from model-->
<!--
                    <entry key="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
                    <entry key="javax.persistence.schema-generation.scripts.create-target" value="${TEACHME_ROOT}/config/ddl/create.ddl"/>
                    <entry key="javax.persistence.schema-generation.scripts.drop-target" value="${TEACHME_ROOT}/config/ddl/drop.ddl"/>
-->

                </map>
            </property>

            <!--inject implementation (Hibernate) in JPA-->
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:showSql="${jpa.show_sql}">
                </bean>
            </property>

        </bean>

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>

        <!--need to clear 2-nd level hibernate cache-->
        <bean id="jpaUtil" class="ua.teachme.util.jpa.JpaUtil"/>
    </beans>

    <beans profile="JDBC">

        <context:component-scan base-package="ua.teachme.**.repository.jdbc"/>

        <!--main class to standard work-->
        <bean id="jdbcTemplate"
              class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="jdbcDataSource"/>
        </bean>

        <!--main class to work with named parameters-->
        <bean id="namedJdbcTemplate"
              class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="jdbcDataSource"/>
        </bean>

    </beans>

</beans>