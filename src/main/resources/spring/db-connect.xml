<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd

                           "
>
    <!--import properties from db.properties-->
    <context:property-placeholder location="classpath:db/db.properties"/>

    <!--connect to main db (for production)-->
    <beans profile="connect-PostgreSQL">

        <!--expand data source driver manager, use pool of connections-->
        <bean id="jdbcDataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource">
            <property name="driverClassName" value="${postgres.driver}"/>
            <property name="url" value="${postgres.url}"/>
            <property name="username" value="${postgres.username}"/>
            <property name="password" value="${postgres.password}"/>
        </bean>

<!--
        <jdbc:initialize-database data-source="jdbcDataSource" enabled="${postgres.init}">
            <jdbc:script location="classpath:db/postgres/initPostgreSQL.sql"/>
            <jdbc:script location="classpath:db/postgres/populatePostgreSQL.sql"/>
        </jdbc:initialize-database>
-->

    </beans>


    <!--connect to secondary db (for tests)-->
    <beans profile="connect-HSQLDB">

        <!--core data source driver manager, one query = one connect, without pooling-->
        <bean id="jdbcDataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${hsqldb.driver}"/>
            <property name="url" value="${hsqldb.url}"/>
            <property name="username" value="${hsqldb.username}"/>
            <property name="password" value="${hsqldb.password}"/>
        </bean>

        <!--initialize db before every spring context usage-->
<!--
        <jdbc:initialize-database data-source="jdbcDataSource" enabled="${hsqldb.init}">
            <jdbc:script location="classpath:db/hsqldb/initHSQLDB.sql"/>
            <jdbc:script location="classpath:db/hsqldb/populateHSQLDB.sql"/>
        </jdbc:initialize-database>
-->

    </beans>

    <beans profile="connect-Heroku">
        <!--expand data source driver manager, use pool of connections-->
        <bean id="jdbcDataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource"
              p:url="${heroku_postgres.url}"
              p:username="${heroku_postgres.username}"
              p:password="${heroku_postgres.password}"
              p:driverClassName="${heroku_postgres.driver}"
              p:validationQuery="SELECT 1 FROM users"
              p:maxActive="10"
              p:minIdle="2"
              p:maxWait="20000"
              p:initialSize="2"
              p:maxIdle="5"
              p:testOnBorrow="true"
              p:removeAbandoned="true"
              p:testOnConnect="true"
              p:testWhileIdle="true"/>
    </beans>

</beans>