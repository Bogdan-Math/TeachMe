<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd"
>

    <!--need to understand annotation like: @PreAuthorize("hasRole('ROLE_ADMIN')")-->
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

    <mvc:annotation-driven>

        <!--correct convert to UA/RU etc. if need to return only Sting from RestController (not json)-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value> <!--- Fix AbstractMessageConverterMethodProcessor#142 -->
                    </list>
                </property>
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>

    <!--add all beans to ctx from "web (controller)" layer-->
    <context:component-scan base-package="ua.teachme.**.web"/>

    <!--all resources inside folder src/main/webapp/resources are mapped so they can be referred inside JSP file-->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!--suppress SpringModelInspection -->
    <!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <!--all jsp inside folder src/main/webapp/WEB-INF are mapped so they can be referred to controller returned values-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"/>

    <!--Internationalization by bundle. All resources inside folder src/main/resources/strings are mapped so they can be referred inside JSP file-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="basenames">
            <list>
                <value>strings/app</value>
            </list>
        </property>
    </bean>

</beans>